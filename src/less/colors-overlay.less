// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
#win-overlay {
    .variableDefs(dark) {
        @accentColor: #0078D7;
        @accentColorDefaultOpacity: 0.7;
        @accentColorHoverOpacity: 0.8;
        @accentColorActiveOpacity: 1;
        @borderColor:rgb(255, 255, 255);
        @textColor:rgb(255, 255, 255);
        @textColorDisabled: rgba(255, 255, 255, 0.4);
        @textColorActive: rgb(255, 255, 255);
        @textColorSelected: rgb(255, 255, 255);
        @separatorBackgroundColor: rgb(123, 123, 123);
        @appbarBackgroundColor: rgb(0, 0, 0);
        @appbarBorderColor: rgb(0, 0, 0);
        @appbarEllipsisHoverBackgroundColor: rgba(255, 255, 255, 0.13);
        @invokeButtonHoverBackgroundColor: rgba(255, 255, 255, 0.13);
        @commandHoverBackgroundColor: rgb(85, 85, 85);
        @commandActiveBackgroundColor: rgb(128, 128, 128);
        @flyoutBorderColor: #0078D7;
        @flyoutBackgroundColor: rgb(0, 0, 0);
        @menuCommandActiveBackgroundColor: rgb(102, 102, 102);
        @menuCommandHoverBackgroundColor: rgb(51, 51, 51);
        @menuCommandDisabledColor: rgba(255, 255, 255, 0.4);
        @settingsFlyoutBackgroundColor: rgb(0, 0, 0);
        @settingsFlyoutBorderColor: #0078D7;
    }

    .variableDefs(light) {
        @accentColor: #0078D7;
        @accentColorDefaultOpacity: 0.7;
        @accentColorHoverOpacity: 0.8;
        @accentColorActiveOpacity: 1;
        @borderColor:rgb(0, 0, 0);
        @textColor:rgb(0, 0, 0);
        @textColorDisabled: rgba(0, 0, 0, 0.4);
        @textColorActive: rgb(0, 0, 0);
        @textColorSelected: rgb(0, 0, 0);
        @separatorBackgroundColor: rgb(123, 123, 123);
        @appbarBackgroundColor: rgb(240, 240, 240);
        @appbarBorderColor: rgb(240, 240, 240);
        @appbarEllipsisHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @invokeButtonHoverBackgroundColor: rgba(205, 205, 205, 0.82);
        @commandHoverBackgroundColor: rgb(184, 184, 184);
        @commandActiveBackgroundColor: rgb(138, 138, 138);
        @flyoutBorderColor: #0078D7;
        @flyoutBackgroundColor: rgb(255, 255, 255);
        @menuCommandActiveBackgroundColor: rgb(153, 153, 153);
        @menuCommandHoverBackgroundColor: rgb(204, 204, 204);
        @menuCommandDisabledColor: rgba(0, 0, 0, 0.4);
        @settingsFlyoutBackgroundColor: rgb(255, 255, 255);
        @settingsFlyoutBorderColor: #0078D7;
    }

    .variableDefs(highcontrast) {
        @accentColor:ButtonText;
        @accentColorDefaultOpacity: 1;
        @accentColorHoverOpacity: 1;
        @accentColorActiveOpacity: 1;
        @borderColor:ButtonText;
        @textColor:ButtonText;
        @textColorDisabled: GrayText;
        @textColorActive: ButtonFace;
        @textColorSelected: ButtonFace;
        @separatorBackgroundColor: ButtonText;
        @appbarBackgroundColor: ButtonFace;
        @appbarBorderColor: Highlight;
        @appbarEllipsisHoverBackgroundColor:Highlight;
        @invokeButtonHoverBackgroundColor: Highlight;
        @commandHoverBackgroundColor: Highlight;
        @commandActiveBackgroundColor: ButtonText;
        @flyoutBorderColor: Highlight;
        @flyoutBackgroundColor: ButtonFace;
        @menuCommandActiveBackgroundColor: ButtonText;
        @menuCommandHoverBackgroundColor: Highlight;
        @menuCommandDisabledColor: GrayText;
        @settingsFlyoutBackgroundColor: ButtonFace;
        @settingsFlyoutBorderColor: Highlight;
    }

    .stylesForTheme(@theme) {

        #win-overlay > .variableDefs(@theme);

        .win-overlay {
            outline: none;
        }

        hr.win-command {
            background-color: @separatorBackgroundColor;
        }

        div.win-command,
        button.win-command {
            border-color: transparent;
            background-color:transparent;
        }

        div.win-command:hover:active,
        button.win-command:hover:active {
            border-color: transparent;
        }

        button:enabled.win-command.win-keyboard:focus,
        div.win-command.win-keyboard:focus,
        button:enabled.win-command.win-command.win-keyboard:hover:focus,
        div.win-command.win-command.win-keyboard:hover:focus {
            border-color: @borderColor;
        }
        .win-commandimage {
            color: @textColor;
        }
        
        button.win-command.win-command:enabled:hover:active,
        button.win-command.win-command:enabled:active {
            background-color: @commandActiveBackgroundColor;
            color:@textColorActive;
        }

        button:enabled:hover:active .win-commandimage,
        button:enabled:active .win-commandimage {
            color:@textColorActive;
        }

        button:disabled .win-commandimage,
        button:disabled:active .win-commandimage {
            color: @textColorDisabled;
        }

        button[aria-checked=true]:enabled .win-label,
        button[aria-checked=true]:enabled .win-commandimage,
        button[aria-checked=true]:enabled:hover:active .win-commandimage.win-commandimage {
            color: @textColorSelected;
        }

        button[aria-checked=true]:-ms-keyboard-active .win-commandimage {
            color: @textColorSelected;
        }

        button[aria-checked=true].win-command:after {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: @accentColor;
            border: 1px solid @accentColor;
            content: "";
            top:-1px; /* -1px to account for the focus rect border */
            left:-1px; /* -1px to account for the focus rect border */
            z-index: -1;
            opacity:@accentColorDefaultOpacity;
            box-sizing: content-box;
        }

        button.win-command:enabled:-ms-keyboard-active {
            background-color: @commandActiveBackgroundColor;
            color: @textColor;
        }

        button[aria-checked=true].win-command:enabled:hover:active {
            background-color: transparent;
        }

        button.win-command:disabled,
        button.win-command:disabled:hover:active {
            background-color: transparent;
            border-color: transparent;
        }

        button.win-command:disabled .win-label,
        button.win-command:disabled:active .win-label {
            color: @textColorDisabled;
        }

        &.win-appbar, .win-appbar {
            background-color: @appbarBackgroundColor;
            border-color: @appbarBorderColor;

            &.win-menulayout {
                .win-toolbar {
                    background-color: @appbarBackgroundColor;
                }
            }

            button.win-appbar-invokebutton.win-appbar-invokebutton {
                background-color: transparent;
                outline: none;

                .win-appbar-ellipsis {
                    border-color: transparent;
                }

                &:enabled {
                    &:-ms-keyboard-active {
                        // Override intrinsic button element styles
                        background-color: transparent;
                    }

                    .win-appbar-ellipsis {
                        color: @textColor;
                    }

                    &.win-keyboard:focus .win-appbar-ellipsis {
                        border-color: @borderColor;
                    }
                }

                &:disabled {
                    &:active, &:hover:active {
                        background-color: transparent;
                    }

                    .win-appbar-ellipsis {
                        color: @textColorDisabled;
                    }
                }
            }
            // When the AppBar is hiding or hidden, the entire invokebutton has a hover background.
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton.win-appbar-invokebutton:enabled:hover:active {
                    background-color: @invokeButtonHoverBackgroundColor;
                }
            }

            &.win-appbar-hiding.win-menulayout {
                button.win-appbar-invokebutton.win-appbar-invokebutton:enabled:hover:active {
                    background-color: transparent;
                }
            }
        }

        &.win-flyout, .win-flyout {
            border-color: @flyoutBorderColor;
            background-color: @flyoutBackgroundColor;
        }

        .win-settingsflyout {
            background-color: @settingsFlyoutBackgroundColor;
        }

        &.win-settingsflyout, .win-settingsflyout {
            border-color: @settingsFlyoutBorderColor;
        }

        &.win-menu button, .win-menu button {
            background-color: transparent;
            color: @textColor;
        }

        .win-menu button.win-command.win-command:enabled:hover:active,
        .win-menu button[aria-checked=true].win-command.win-command:enabled:hover:active {
            background-color: @menuCommandActiveBackgroundColor;
            color:@textColorActive;
        }

        &.win-menu button[aria-checked=true].win-command:after,
        .win-menu button[aria-checked=true].win-command:after {
            background-color: transparent;
            border-color: transparent;
        }

        &.win-menu button:disabled, .win-menu button:disabled,
        &.win-menu button:disabled:active, .win-menu button:disabled:active {
            background-color: transparent;
            color: @menuCommandDisabledColor;
        }
    }

    .stylesForThemeHover(@theme) {

        #win-overlay > .variableDefs(@theme);

        /* Appbar control colors */
        &.win-appbar, .win-appbar {

            button.win-appbar-invokebutton:enabled:hover,
            button.win-appbar-invokebutton:disabled:hover {
                background-color: transparent;
            }

            // When the AppBar is showing or shown, only the ellipsis has a hover background.*/
            &.win-appbar-showing, &.win-appbar-shown {
                button.win-appbar-invokebutton:enabled:hover .win-appbar-ellipsis {
                    background-color: @appbarEllipsisHoverBackgroundColor;
                }
            }
            // When the AppBar is hiding or hidden, the entire invokebutton has a hover background.
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton:enabled:hover {
                    background-color: @appbarEllipsisHoverBackgroundColor;
                }
            }
        }

        &.win-appbar.win-menulayout.win-appbar-hiding, .win-appbar.win-menulayout.win-appbar-hiding {
            &.win-appbar-hiding, &.win-appbar-hidden {
                button.win-appbar-invokebutton:enabled:hover {
                    background-color: transparent;
                }
            }
        }

        button.win-command:enabled:hover {
            background-color: @commandHoverBackgroundColor;
            color: @textColor;
        }

        .win-menu button.win-command:enabled:hover {
            background-color: @menuCommandHoverBackgroundColor;
            color: @textColor;
        }

        button[aria-checked=true].win-command:hover {
            background-color: transparent;
        }

        button:enabled[aria-checked=true].win-command:hover:after {
            opacity:@accentColorHoverOpacity;
        }

        button:enabled[aria-checked=true].win-command:hover:active:after {
            opacity:@accentColorActiveOpacity;
        }
    }
}

.Colors(@theme) {
    #win-overlay > .stylesForTheme(@theme);
}

.ColorsHover(@theme) {
    #win-overlay > .stylesForThemeHover(@theme);
}

.HighContrast() {
    #win-overlay > .stylesForTheme(highcontrast);
}

.HighContrastHover() {
    #win-overlay > .stylesForThemeHover(highcontrast);
}