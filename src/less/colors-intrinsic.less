// Copyright (c) Microsoft Open Technologies, Inc.  All Rights Reserved. Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.

.Colors(@theme) {
    .colorDefinitions(@theme);

    // These classes reverse the colors on the subtree to which they are applied.
    // Ensure that the opposite color scheme always comes after the rule that is for the current color scheme.
    // This ensures that an author using <div class="win-ui-dark win-ui-light"> will always get the rule for the
    // inverted scheme to match last and win.
    .bodyStyle() {
        background-color: @altHigh;
        color: @baseHigh;
    }
    & when (@theme = dark) {
        .win-ui-dark { .bodyStyle(); }
        .win-ui-light { .bodyStyle(); }
    }
    & when (@theme = light) {
        .win-ui-light { .bodyStyle(); }
        .win-ui-dark { .bodyStyle(); }
    }

    //
    // Body
    //
    body {
        .bodyStyle();
    }

    //
    // Text selection
    //
    ::selection {
        background-color: @accentColor;
        color: #fff;
    }

    //
    // Link
    //
    a {
        color: @accentColor;

        &:hover {
            color: @baseMid;
        }

        &:active {
            color: @baseMediumMid;
        }

        &[disabled] {
            color: @baseLow;
        }
    }

    //
    // Radio and Checkbox
    //
    input[type=checkbox] {
        &::-ms-check {
            color: @baseHigh;
            border-color: @baseMediumHigh;
            background-color: transparent;
        }

        &:indeterminate::-ms-check {
            color: @baseMediumHigh;
            border-color: @accentColor;
        }

        &:checked::-ms-check {
            background-color: @accentColor;
            border-color: transparent;
        }

        &:hover::-ms-check {
            border-color: @baseHigh;
        }

        &:hover:indeterminate::-ms-check {
            color: @baseHigh;
            border-color: @accentColor;
        }

        &:active::-ms-check {
            border-color: transparent;
            background-color: @baseMid;
        }

        &:indeterminate:active::-ms-check {
            color: @baseMid;
            border-color: @baseMediumHigh;
            background-color: transparent;
        }

        &:disabled::-ms-check, &:indeterminate:disabled::-ms-check {
            color: @baseLow;
            border-color: @baseLow;
            background-color: transparent;
        }
    }

    input[type=radio] {
        &::-ms-check {
            color: @baseMediumHigh;
            border-color: @baseMediumHigh;
            background-color: transparent;
        }

        &:checked::-ms-check {
            border-color: @accentColor;
        }

        &:hover::-ms-check {
            color: @baseHigh;
        }

        &:active::-ms-check {
            color: @baseMid;
            border-color: @baseMid;
        }

        &:disabled::-ms-check {
            color: @baseLow;
            border-color: @baseLow;
        }
    }

    //
    // Progress
    //
    progress {
      // Main colors
      color: @accentColor;
      background-color: @baseLow;

      &::-webkit-progress-value {
        background-color: @accentColor;
      }
      &::-moz-progress-bar {
        background-color: @accentColor;
      }

      // Ring
      &.win-ring {
        background-color: transparent;
      }

      // This is a weird webkit issue where the background color
      // of the progress seems to overlay with this background color,
      // but neither one on its own seems to work correctly. Really we just
      // want the regular progress bg color, but it doesn't seem to take it
      // unless we specify some color here.
      &::-webkit-progress-bar {
        background-color: transparent;
      }
    }

    //
    // Push button
    //
    button,
    input[type=button],
    input[type=reset],
    input[type=submit],
    button[type=submit] {
        color: @baseHigh;
        background-color: @baseLow;
        border-color: transparent;

        &:hover {
            border-color: @baseMediumMid;
        }

        &:active {
            background-color: @baseMediumMid;
        }

        &:disabled {
            color: @baseLow;
            background-color: @baseLow;
            border-color: transparent;
        }
    }

    input[type=submit],
    button[type=submit] {
        background-color: @accentColor;
    }

    //
    // Select
    //
    select {
        color: @baseHigh;
        border-color: @baseMediumMid;
        background-color: @altMediumMid;

        &::-ms-expand {
            color: @baseMediumHigh;
            background-color: transparent;
        }

        &:hover {
            border-color: @baseMid;
            background-color: @altMid;
        }

        &:disabled {
            color: @baseLow;
            border-color: transparent;
            background-color: @baseLow;
        }
        &:disabled::-ms-expand {
            color: @baseLow;
        }
    }

    option {
        color: @baseHigh;
        background-color: @chromeMediumMid;

        &:hover {
            color: @baseHigh;
            background-color: @listHover;
        }
        &:checked {
            color: @baseHigh;
            background-color: @accentColor;
        }
        &:active {
            color: @baseHigh;
            background-color: @listPress;
        }
    }

    select[multiple] {
        border: none;
        background-color: @chromeMediumMid;
    }

    //
    // Slider
    //
    input[type=range] {
        background-color: transparent;

        // Note the use of background instead of background-color
        // FF slider styling doesn't work with background-color
        // so using background for everything here for consistency
        .thumb() {
            background: @accentColor;
        }
        .thumbHover() {
            background: @sliderThumbHover;
        }
        .thumbActive() {
            background: @chromeHigh;
        }
        .thumbDisabled() {
            background: @chromeHigh;
        }
        .lowerFill() {
            background: @accentColor;
        }
        .upperFill() {
            background: @baseMediumMid;
        }
        .upperFillHover() {
            background: @baseMid;
        }
        .fillDisabled() {
            background: @baseLow;
        }

        // We can't use :extend() to shrink the CSS output here since rules with
        // mixed browser pseudo selectors will get thrown out

        // Thumb
        &::-ms-thumb {.thumb();}
        &::-webkit-slider-thumb {.thumb();}
        &::-moz-range-thumb {.thumb();}
        &:hover::-ms-thumb {.thumbHover();}
        &:hover::-webkit-slider-thumb {.thumbHover();}
        &:hover::-moz-range-thumb {.thumbHover();}
        &:active::-ms-thumb {.thumbActive();}
        &:active::-webkit-slider-thumb {.thumbActive();}
        &:active::-moz-range-thumb {.thumbActive();}
        &:disabled::-ms-thumb {.thumbDisabled();}
        &:disabled::-webkit-slider-thumb {.thumbDisabled();}
        &:disabled::-moz-range-thumb {.thumbDisabled();}

        // Lower fill (only supported in IE)
        &::-ms-fill-lower {.lowerFill();}
        &:disabled::-ms-fill-lower {.fillDisabled();}

        // Upper fill / track
        &::-ms-fill-upper {.upperFill();}
        &::-webkit-slider-runnable-track {.upperFill();}
        &::-moz-range-track {.upperFill();}
        &:hover::-ms-fill-upper {.upperFillHover();}
        &:hover::-webkit-slider-runnable-track {.upperFillHover();}
        &:hover::-moz-range-track {.upperFillHover();}
        &:active::-ms-fill-upper {.upperFill();}
        &:active::-webkit-slider-runnable-track {.upperFill();}
        &:active::-moz-range-track {.upperFill();}
        &:disabled::-ms-fill-upper {.fillDisabled();}
        &:disabled::-webkit-slider-runnable-track {.fillDisabled();}
        &:disabled::-moz-range-track {.fillDisabled();}

        // IE specific stuff
        &::-ms-track {
            color: transparent;
            background-color: transparent;
        }
        &::-ms-ticks-before, &::-ms-ticks-after {
            color: @baseMediumMid;
        }
    }

    //
    // Text box
    //
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=number],
    input[type=tel],
    input[type=url],
    input[type=search],
    textarea,
    .win-textarea {
        color: @baseHigh;
        background-color: @altMediumMid;
        border-color: @baseMediumMid;

        // Hint text color
        // Single colon on -ms not a typo
        &:-ms-input-placeholder {color: @baseMid;}
        &::-webkit-input-placeholder {color: @baseMid;}
        &::-moz-input-placeholder {color: @baseMid;}

        &:hover {
            background-color: @altMid;
            border-color: @baseMid;
        }

        &:focus {
            color: @baseBlack;
            background-color: @baseWhite;
            border-color: @accentColor;
        }
    }

    //
    // Clear/Reveal buttons
    //
    input::-ms-clear, input::-ms-reveal {
        display: block;
        color: fade(@baseBlack, 60%); // Equivalent to altMid in dark and baseMid in light

        &:hover {
            color: @accentColor;
        }
        &:active {
            color: @baseWhite;
            background-color: @accentColor;
        }
    }
}